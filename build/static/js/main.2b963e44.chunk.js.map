{"version":3,"sources":["Menu/logo512.png","Charts/Chart.js","Menu/MenuBar.js","Form/Form.js","App.js","Sobre/Sobre.js","serviceWorker.js","index.js"],"names":["module","exports","Chart","props","state","chartData","className","data","this","height","width","options","responsive","maintainAspectRatio","title","display","displayTitle","text","fontSize","fontColor","legend","displayLegend","position","legendPosition","layout","padding","top","left","right","bottom","Component","defaultProps","MenuBar","doc","jsPDF","background","img","Image","setProperties","subject","author","keywords","setTextColor","setFontSize","setDrawColor","setLineWidth","line","addPage","node","document","getElementsByClassName","domtoimage","toPng","then","dataUrl","src","addImage","save","to","logo","alt","onClick","console","log","demoFromHTML","Form","style","color","initialValues","email","onSubmit","values","a","Promise","resolve","setTimeout","alert","JSON","stringify","validationSchema","Yup","shape","required","touched","errors","isSubmitting","handleChange","handleBlur","handleSubmit","htmlFor","name","type","placeholder","value","onChange","onBlur","id","disabled","Tempo","BatimentosCardiacos","EsforcoRespiratorio","SaturacaoOxigenio","FluxoNasal","Ruido","divStyle","margin","App","chartData1","chartData2","chartData3","chartData4","chartData5","mydata","getChartData","setState","labels","datasets","label","fill","borderColor","backgroundColor","Sobre","Boolean","window","location","hostname","match","ReactDOM","render","path","exact","component","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2b963e44.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo512.df180eb6.png\";","import React, {Component} from 'react';\nimport {Line} from 'react-chartjs-2';\n\nclass Chart extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      chartData: props.chartData\n    }\n  }\n\n  // 'defaultProps define uma propriedade padrao\n  // caso nao seja especificado nenhuma quando passado\n  // e será sobreescrito caso algum seja passado\n  static defaultProps = {\n    displayTitle:true,\n    displayLegend: true,\n    legendPosition:'bottom'\n  }\n\n  render(){\n    return (\n      <div className=\"chart\">\n        <Line\n          data={this.state.chartData}\n          height={400}\n          width={10}\n          options={{\n            responsive: true,\n            maintainAspectRatio: false,\n            title:{\n              display:this.props.displayTitle,\n              text: this.props.title,\n              fontSize:20,\n              fontColor: \"#ac0000\"\n            },\n            legend:{\n              display:this.props.displayLegend,\n              position:this.props.legendPosition\n            },\n            layout: {\n              padding: {\n                  top: 5,\n                  left: 15,\n                  right: 15,\n                  bottom: 15\n              }\n          }\n          }}\n        />\n      </div>\n    )\n  }\n}\n\nexport default Chart;\n","import React, {Component} from 'react';\nimport logo from './logo512.png';\nimport * as jsPDF from \"jspdf\";\nimport domtoimage from 'dom-to-image';\nimport './Menu.css';\nimport { Link } from 'react-router-dom'\n\nclass MenuBar extends Component{\n\n    demoFromHTML(){\n       // Propriedades\n      var doc = new jsPDF(\"l\", \"pt\");\n      const options = { background: 'white', height: 500, width: 1500 };\n      var img = new Image();\n      doc.setProperties({\n          title: 'Relatório do Sono',\n          subject: 'Relatório do Sono',\n          author: 'How2uSleep',\n          keywords: 'apneia,hipopneia,sono'\n      })\n      doc.setTextColor(\"#ac0000\");\n\n      // Título\n      doc.setFontSize(32);\n      doc.text(20, 30, 'Relatório do Sono');\n      doc.setDrawColor(\"#ac0000\");\n      doc.setLineWidth(1.5);\n      doc.line(20, 35, 700, 35);\n      doc.addPage();\n      doc.setFontSize(16);\n\n      // Batimentos Cardíacos\n      doc.text(20, 20, 'Batimentos Cardíacos');\n      var node = document.getElementsByClassName('divPrint')[0];\n      domtoimage.toPng(node,options)\n      .then(function (dataUrl) {\n          img.src = dataUrl;\n          doc.addImage(img, \"JPEG\", 0, 150, 700, 400);\n          doc.addPage();\n          // Esforco Respiratorio\n          doc.text(20, 20, 'Esforço Respiratório');\n          var node = document.getElementsByClassName('divPrint1')[0];\n          domtoimage.toPng(node,options)\n          .then(function (dataUrl) {\n              img.src = dataUrl;\n              doc.addImage(img, \"JPEG\", 0, 150, 700, 400);\n              doc.addPage();\n              // Saturação de Oxigênio\n              doc.text(20, 20, 'Saturação de Oxigênio');\n              var node = document.getElementsByClassName('divPrint2')[0];\n              domtoimage.toPng(node,options)\n              .then(function (dataUrl) {\n                  img.src = dataUrl;\n                  doc.addImage(img, \"JPEG\", 0, 150, 700, 400);\n                  doc.addPage();\n                  // Fluxo Nasal\n                  doc.text(20, 20, 'Fluxo Nasal');\n                  var node = document.getElementsByClassName('divPrint3')[0];\n                  domtoimage.toPng(node,options)\n                  .then(function (dataUrl) {\n                      img.src = dataUrl;\n                      doc.addImage(img, \"JPEG\", 0, 150, 700, 400);\n                      doc.addPage();\n                      // Ruido\n                      doc.text(20, 20, 'Ruído');\n                      var node = document.getElementsByClassName('divPrint4')[0];\n                      domtoimage.toPng(node,options)\n                      .then(function (dataUrl) {\n                          img.src = dataUrl;\n                          doc.addImage(img, \"JPEG\", 0, 150, 700, 400);\n                          // doc.output('dataurlnewwindow');\n                          doc.save(\"Relatorio.pdf\");\n                      })\n                  })\n              })\n          })\n      })\n    }\n\n    render(){\n        return(\n            <div className=\"App-header\">\n                <ul className=\"menuBar\">\n                <Link to=\"/\"><li className=\"itemLeft\"><img src={logo} className=\"App-logo\" alt=\"logo\" /></li></Link>\n                <li className=\"itemLeft\"><h3 className=\"mainTitle\">How2uSleep</h3></li>\n                 <li className=\"itemRight\">\n                    <Link to=\"/Sobre\"><button>Sobre</button></Link>\n                 </li>\n                 <li className=\"itemRight\">\n                     <button className=\"Sobre\" onClick={() => console.log(\"Relatorio\") || this.demoFromHTML()}>\n                         Relatório\n                       </button>\n                 </li>\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default MenuBar\n","import React from \"react\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport \"./Form.css\";\n\nconst Form = () => (\n  <div className=\"app\">\n    <h1 style={{color: \"rgb(172, 0, 0)\"}}> Relatório</h1>\n\n    <Formik\n      initialValues={{ email: \"\"}}\n      onSubmit={async values => {\n        await new Promise(resolve => setTimeout(resolve, 500));\n        alert(JSON.stringify(values, null, 2));\n      }}\n      validationSchema={Yup.object().shape({\n        email: Yup.string()\n          .email()\n          .required(\"Required\")\n      })}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors, \n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit\n        } = props;\n\n        return (\n          <form onSubmit={handleSubmit}>\n\n            <label htmlFor=\"name\" style={{color: \"rgb(172, 0, 0)\"}}>Nome Completo</label>\n            <input\n              name=\"name\"\n              type=\"string\"\n              placeholder=\"Nome Completo\"\n              value={values.name}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              className={errors.name && touched.name && \"error\"}\n            />\n\n        <label htmlFor=\"email\" style={{ display: \"block\", color: \"rgb(172, 0, 0)\"}}>Email</label>\n            <input\n              id=\"email\"\n              placeholder=\"Email\"\n              type=\"text\"\n              value={values.email}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              className={\n                errors.email && touched.email\n                  ? \"text-input error\"\n                  : \"text-input\"\n              }\n            />\n            {errors.email && touched.email && (\n              <div className=\"input-feedback\">{errors.email}</div>\n            )}\n\n            <button className=\"SubmitButton\" type=\"submit\" disabled={isSubmitting}>\n              Enviar\n            </button>\n          </form>\n        );\n      }}\n    </Formik>\n  </div>\n);\n\nexport default Form;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Chart from './Charts/Chart';\nimport MenuBar from './Menu/MenuBar';\nimport Form from './Form/Form';\n\nvar Tempo = [1,2,3,4,5,6,7,8,9,10,11];\nvar BatimentosCardiacos = [1,20,3,50,100,50,7,80,10,40,120];\nvar EsforcoRespiratorio = [1,20,3,50,100,50,7,80,10,40,120];\nvar SaturacaoOxigenio = [1,20,3,50,100,50,7,80,10,40,120];\nvar FluxoNasal = [1,20,3,50,100,50,7,80,10,40,120];\nvar Ruido = [1,20,3,50,100,50,7,80,10,40,120];\n\nconst divStyle = {\n    width: 900,\n    height: 400,\n    margin: \"auto\"\n};\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      chartData1:{},    // Batimentos Cardiacos\n      chartData2:{},    // Esforco Respiratorio\n      chartData3:{},    // Saturacao de Oxigenio\n      chartData4:{},    // Fluxo Nasal\n      chartData5:{},     // Ronco\n      mydata: []\n    }\n  }\n\n  componentWillMount(){\n    this.getChartData();\n  }\n\n  // componentDidMount(){\n  //     // this.interval = setInterval(this.fetchNews, 1000); chamar dados da API a cada 1 seg\n  //     axios.get('https://jsonplaceholder.typicode.com/users').then(result => {\n  //       console.log(result)\n  //         this.setState({ mydata: result.data});\n  //     });\n  // }\n\n  getChartData(){\n    // Ajax calls here\n    this.setState({\n      chartData1:{\n        labels: Tempo,\n        datasets:[\n          {\n            label:'Batimentos Cardíacos',\n            data: BatimentosCardiacos,\n            fill: true,\n            borderColor: \"#ac0000\",\n            backgroundColor:[\n              'rgba(172, 0, 0,0.2)'\n            ]\n          }\n        ]\n      },\n      chartData2:{\n        labels: Tempo,\n        datasets:[\n          {\n            label:'Esforço Respiratório',\n            data: EsforcoRespiratorio,\n            fill: true,\n            borderColor: \"#ac0000\",\n            backgroundColor:[\n              'rgba(172, 0, 0,0.2)'\n            ]\n          }\n        ]\n      },\n      chartData3:{\n        labels: Tempo,\n        datasets:[\n          {\n            label:'Saturação de Oxigênio',\n            data: SaturacaoOxigenio,\n            fill: true,\n            borderColor: \"#ac0000\",\n            backgroundColor:[\n              'rgba(172, 0, 0,0.2)'\n            ]\n          }\n        ]\n      },\n      chartData4:{\n        labels: Tempo,\n        datasets:[\n          {\n            label:'Fluxo Nasal',\n            data: FluxoNasal,\n            fill: true,\n            borderColor: \"#ac0000\",\n            backgroundColor:[\n              'rgba(172, 0, 0,0.2)'\n            ]\n          }\n        ]\n      },\n      chartData5:{\n        labels: Tempo,\n        datasets:[\n          {\n            label:'Ruído',\n            data: Ruido,\n            fill: true,\n            borderColor: \"#ac0000\",\n            backgroundColor:[\n              'rgba(172, 0, 0,0.2)'\n            ]\n          }\n        ]\n      },\n  });\n  }\n\n  render() {\n    return (\n      <div  className=\"App\">\n        <MenuBar />\n\n        <ul className=\"menuBar\">\n\n        <li className=\"itemLeft\">\n        <div id=\"pdf\" className=\"divPrint\" style={divStyle} >\n          <Chart chartData={this.state.chartData1} title=\"Batimentos Cardíacos\"  />\n        </div>\n        </li>\n\n        <li className=\"itemRight\">\n        <div className=\"divPrint1\" style={divStyle}>\n          <Chart chartData={this.state.chartData2} title=\"Esforço Respiratório\"   />\n        </div>\n        </li>\n\n        <li className=\"itemLeft\">\n        <div className=\"divPrint2\" style={divStyle}>\n          <Chart chartData={this.state.chartData3} title=\"Saturação de Oxigênio\" />\n        </div>\n        </li>\n\n        <li className=\"itemRight\">\n        <div className=\"divPrint3\" style={divStyle}>\n          <Chart chartData={this.state.chartData4} title=\"Fluxo Nasal\"  />\n        </div>\n        </li>\n        </ul>\n        \n        <div className=\"divPrint4\" style={divStyle}>\n            <Chart chartData={this.state.chartData5} title=\"Ruído\"  />\n        </div>\n\n        <div className=\"divPrint5\" style={divStyle}>\n          <Form />\n        </div>\n\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\r\nimport './Sobre.css';\r\nimport MenuBar from '../Menu/MenuBar';\r\n\r\nclass Sobre extends Component{\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <MenuBar />\r\n                </div>\r\n                <div id=\"sobreDiv\">\r\n                    <h1 id=\"sobreTitle\">Sobre</h1>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Sobre;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Sobre from './Sobre/Sobre';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\n\nReactDOM.render(\n    <BrowserRouter>\n        <Switch>\n            <Route path=\"/\" exact={true} component={App} />\n            <Route path=\"/Sobre\" component={Sobre} />\n        </Switch>\n    </ BrowserRouter> \n    , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}