{"version":3,"sources":["Menu/logo512.png","Charts/Chart.js","Menu/MenuBar.js","Form/Form.js","Form/EmailForm.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Chart","props","state","chartData","className","data","this","height","width","options","responsive","maintainAspectRatio","title","display","displayTitle","text","fontSize","fontColor","legend","displayLegend","position","legendPosition","layout","padding","top","left","right","bottom","Component","defaultProps","MenuBar","src","logo","alt","Form","initialValues","email","onSubmit","values","a","Promise","resolve","setTimeout","alert","JSON","stringify","validationSchema","Yup","shape","required","touched","errors","isSubmitting","dirty","handleChange","handleBlur","handleSubmit","handleReset","htmlFor","name","type","placeholder","value","onChange","onBlur","style","id","disabled","feedback","bind","onClick","event","setState","target","sendFeedback","message_html","from_name","reply_to","templateId","variables","window","emailjs","send","then","res","console","log","catch","err","error","React","Tempo","BatimentosCardiacos","EsforcoRespiratorio","SaturacaoOxigenio","FluxoNasal","Ruido","App","chartData1","chartData2","chartData3","chartData4","chartData5","mydata","getChartData","axios","get","result","labels","datasets","label","fill","borderColor","backgroundColor","pdfConverter","require","input","document","getElementsByClassName","html2canvas","canvas","imgData","toDataURL","pdf","addImage","output","message","color","margin","demoFromHTML","map","person","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5a188fea.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo512.df180eb6.png\";","import React, {Component} from 'react';\nimport {Line} from 'react-chartjs-2';\n\nclass Chart extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      chartData:props.chartData\n    }\n  }\n\n  // 'defaultProps define uma propriedade padrao\n  // caso nao seja especificado nenhuma quando passado\n  // e será sobreescrito caso algum seja passado\n  static defaultProps = {\n    displayTitle:true,\n    displayLegend: true,\n    legendPosition:'bottom'\n  }\n\n  render(){\n    return (\n      <div className=\"chart\">\n        <Line\n          data={this.state.chartData}\n          height={400}\n          width={10}\n          options={{\n            responsive: true,\n            maintainAspectRatio: false,\n            title:{\n              display:this.props.displayTitle,\n              text: this.props.title,\n              fontSize:20,\n              fontColor: \"#ac0000\"\n            },\n            legend:{\n              display:this.props.displayLegend,\n              position:this.props.legendPosition\n            },\n            layout: {\n              padding: {\n                  top: 5,\n                  left: 15,\n                  right: 15,\n                  bottom: 15\n              }\n          }\n          }}\n        />\n      </div>\n    )\n  }\n}\n\nexport default Chart;\n","import React, {Component} from 'react';\nimport logo from './logo512.png';\n\nclass MenuBar extends Component{\n    render(){\n        return(\n            <div className=\"App-header\">\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                <h3 className=\"mainTitle\">How2usleep</h3>\n            </div>\n        );\n    }\n}\n\nexport default MenuBar\n","import React from \"react\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport \"./Form.css\";\n \nconst Form = () => (\n  <div className=\"app\">\n    <h1> Relatório</h1>\n\n    <Formik\n      initialValues={{ email: \"\"}}\n      onSubmit={async values => {\n        await new Promise(resolve => setTimeout(resolve, 500));\n        alert(JSON.stringify(values, null, 2));\n      }}\n      validationSchema={Yup.object().shape({\n        email: Yup.string()\n          .email()\n          .required(\"Required\")\n      })}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset\n        } = props;\n        return (\n          <form onSubmit={handleSubmit}>\n\n            <label htmlFor=\"email\">Nome Completo</label>\n            <input\n              name=\"name\"\n              type=\"string\"\n              placeholder=\"Nome Completo\"\n              value={values.name}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              className={errors.name && touched.name && \"error\"}\n            />\n\n            <label htmlFor=\"email\" style={{ display: \"block\" }}>\n              Email\n            </label>\n            <input\n              id=\"email\"\n              placeholder=\"Enter your email\"\n              type=\"text\"\n              value={values.email}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              className={\n                errors.email && touched.email\n                  ? \"text-input error\"\n                  : \"text-input\"\n              }\n            />\n            {errors.email && touched.email && (\n              <div className=\"input-feedback\">{errors.email}</div>\n            )}         \n\n            <button className=\"SubmitButton\" type=\"submit\" disabled={isSubmitting}>\n              Enviar\n            </button>\n          </form>\n        );\n      }}\n    </Formik>\n  </div>\n);\n \nexport default Form;","import React from 'react';\nimport emailjs from 'emailjs-com';\n\nexport default class extends React.Component {\n  constructor(props) {\n\tsuper(props);\n\tthis.state = { feedback: '', name: 'How2uSleep', email: 'how2usleep@gmail.com' };\n\tthis.handleChange = this.handleChange.bind(this);\n\tthis.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  render() {\n\treturn (\n  \t<form className=\"test-mailing\">\n    \t<h1>Lets see if it works</h1>\n    \t<div>\n      \t<textarea\n        \tid=\"test-mailing\"\n        \tname=\"test-mailing\"\n        \tonChange={this.handleChange}\n        \tplaceholder=\"Post some lorem ipsum here\"\n        \trequired\n        \tvalue={this.state.feedback}\n        \tstyle={{width: '100%', height: '150px'}}\n      \t/>\n    \t</div>\n    \t<input type=\"button\" value=\"Submit\" className=\"btn btn--submit\" onClick={this.handleSubmit} />\n  \t</form>\n\t)\n  }\n\n  handleChange(event) {\n    this.setState({feedback: event.target.value})\n  }\n\n  handleSubmit (event) {\n\tconst templateId = 'template_id';\n\tthis.sendFeedback(templateId, {message_html: this.state.feedback, from_name: this.state.name, reply_to: this.state.email})\n  }\n\n  sendFeedback (templateId, variables) {\n\twindow.emailjs.send(\n  \t'gmail', templateId,\n  \tvariables\n  \t).then(res => {\n    \tconsole.log('Email successfully sent!')\n  \t})\n  \t// Handle errors here however you like, or use a React error boundary\n  \t.catch(err => console.error('Oh well, you failed. Here some thoughts on the error that occured:', err))\n  }\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport Chart from './Charts/Chart';\nimport MenuBar from './Menu/MenuBar';\nimport Form from './Form/Form';\nimport EmailForm from './Form/EmailForm';\nimport html2canvas from \"html2canvas\";\nimport axios from 'axios';\n// import jsPDF from \"jspdf\";\n\nvar Tempo = [1,2,3,4,5,6,7,8,9,10,11];\nvar BatimentosCardiacos = [1,20,3,50,100,50,7,80,10,40,120];\nvar EsforcoRespiratorio = [1,20,3,50,100,50,7,80,10,40,120];\nvar SaturacaoOxigenio = [];\nvar FluxoNasal = [];\nvar Ruido = [];\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      chartData1:{},    // Batimentos Cardiacos\n      chartData2:{},    // Esforco Respiratorio\n      chartData3:{},    // Saturacao de Oxigenio\n      chartData4:{},    // Fluxo Nasal\n      chartData5:{},     // Ronco\n      mydata: []\n    }\n  }\n\n  componentWillMount(){\n    this.getChartData();\n  }\n\n  componentDidMount(){\n      axios.get('https://jsonplaceholder.typicode.com/users').then(result => {\n        console.log(result)\n          this.setState({ mydata: result.data});\n      });\n  }\n\n  getChartData(){\n    // Ajax calls here\n    this.setState({\n      chartData1:{\n        labels: Tempo,\n        datasets:[\n          {\n            label:'Batimentos Cardíacos',\n            data: BatimentosCardiacos,\n            fill: true,\n            borderColor: \"#ac0000\",\n            backgroundColor:[\n              'rgba(172, 0, 0,0.2)'\n            ]\n          }\n        ]\n      },\n      chartData2:{\n        labels: Tempo,\n        datasets:[\n          {\n            label:'Esforço Respiratório',\n            data: EsforcoRespiratorio,\n            fill: false,\n            borderColor: \"#ac0000\",\n            backgroundColor:[\n              'rgb(172, 0, 0)'\n            ]\n          }\n        ]\n      },\n      chartData3:{\n        labels: Tempo,\n        datasets:[\n          {\n            label:'Saturação de Oxigênio',\n            data: SaturacaoOxigenio,\n            fill: false,\n            borderColor: \"#ac0000\",\n            backgroundColor:[\n              'rgb(172, 0, 0)'\n            ]\n          }\n        ]\n      },\n      chartData4:{\n        labels: Tempo,\n        datasets:[\n          {\n            label:'Fluxo Nasal',\n            data: FluxoNasal,\n            fill: false,\n            borderColor: \"#ac0000\",\n            backgroundColor:[\n              'rgb(172, 0, 0)'\n            ]\n          }\n        ]\n      },\n      chartData5:{\n        labels: Tempo,\n        datasets:[\n          {\n            label:'Ronco',\n            data: Ruido,\n            fill: false,\n            borderColor: \"#ac0000\",\n            backgroundColor:[\n              'rgb(172, 0, 0)'\n            ]\n          }\n        ]\n      },\n    });\n  }\n\n  demoFromHTML() {\n    const pdfConverter = require(\"jspdf\");\n    let input = window.document.getElementsByClassName(\"divPrint\")[0];\n    html2canvas(input)\n      .then(canvas => {\n        console.log(canvas);\n        const imgData = canvas.toDataURL(\"image/png\");\n        const pdf = new pdfConverter(\"l\", \"pt\");\n        pdf.addImage(imgData, \"JPEG\", 50, 100, 800,400); // eixo x e y, largura e altura\n        // pdf.save(\"BatimentosCardiacos.pdf\");\n        pdf.output('dataurlnewwindow');\n      })\n      .catch(err => console.log(err.message));\n  }\n\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <MenuBar />\n        <hr style={{color:\"#ac0000\"}}></hr>\n        <div className=\"divPrint\" style={{width:1000, height: 400, margin: \"auto\"}} >\n          <Chart chartData={this.state.chartData1} title=\"Batimentos Cardíacos\"  />\n\n          <button className=\"pdfButton\" onClick={() => console.log(\"ici\") || this.demoFromHTML()}>\n              Download em PDF\n            </button>\n        </div>\n\n        <div style={{width:1000, height: 400, margin: \"auto\"}}>\n          <Chart chartData={this.state.chartData2} title=\"Esforço Respiratório\"   />\n        </div>\n\n        <div style={{width:1000, height: 400, margin: \"auto\"}}>\n          <Chart chartData={this.state.chartData3} title=\"Saturação de Oxigênio\" />\n        </div>\n\n        <div style={{width:1000, height: 400, margin: \"auto\"}}>\n          <Chart chartData={this.state.chartData4} title=\"Fluxo Nasal\"  />\n        </div>\n\n        <div style={{width:1000, height: 400, margin: \"auto\"}}>\n            <Chart chartData={this.state.chartData5} title=\"Ruído\"  />\n        </div>\n\n        <div>\n          <Form />\n        </div>\n\n        <div style={{width:1000, height: 400, margin: \"auto\"}}>\n          <EmailForm />\n        </div>\n\n        <div>\n            <ul>\n                {this.state.mydata.map(person => <li>{person.email}</li>)}\n            </ul>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}