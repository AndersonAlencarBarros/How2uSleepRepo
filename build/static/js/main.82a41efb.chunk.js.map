{"version":3,"sources":["Menu/logo512.png","Charts/Chart.js","Menu/MenuBar.js","Form/Form.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Chart","props","state","chartData","className","data","this","height","width","options","responsive","maintainAspectRatio","title","display","displayTitle","text","fontSize","fontColor","legend","displayLegend","position","legendPosition","layout","padding","top","left","right","bottom","Component","defaultProps","MenuBar","src","logo","alt","Form","initialValues","email","onSubmit","values","a","Promise","resolve","setTimeout","alert","JSON","stringify","validationSchema","Yup","shape","required","touched","errors","isSubmitting","dirty","handleChange","handleBlur","handleSubmit","handleReset","htmlFor","name","type","placeholder","value","onChange","onBlur","style","id","disabled","Tempo","BatimentosCardiacos","EsforcoRespiratorio","SaturacaoOxigenio","FluxoNasal","Ruido","divStyle","margin","App","chartData1","chartData2","chartData3","chartData4","chartData5","mydata","getChartData","setState","labels","datasets","label","fill","borderColor","backgroundColor","doc","jsPDF","background","img","Image","setProperties","subject","author","keywords","setTextColor","setFontSize","setDrawColor","setLineWidth","line","addPage","node","document","getElementsByClassName","domtoimage","toPng","then","dataUrl","addImage","output","color","onClick","console","log","demoFromHTML","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.82a41efb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo512.df180eb6.png\";","import React, {Component} from 'react';\nimport {Line} from 'react-chartjs-2';\n\nclass Chart extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      chartData: props.chartData\n    }\n  }\n\n  // 'defaultProps define uma propriedade padrao\n  // caso nao seja especificado nenhuma quando passado\n  // e será sobreescrito caso algum seja passado\n  static defaultProps = {\n    displayTitle:true,\n    displayLegend: true,\n    legendPosition:'bottom'\n  }\n\n  render(){\n    return (\n      <div className=\"chart\">\n        <Line\n          data={this.state.chartData}\n          height={400}\n          width={10}\n          options={{\n            responsive: true,\n            maintainAspectRatio: false,\n            title:{\n              display:this.props.displayTitle,\n              text: this.props.title,\n              fontSize:20,\n              fontColor: \"#ac0000\"\n            },\n            legend:{\n              display:this.props.displayLegend,\n              position:this.props.legendPosition\n            },\n            layout: {\n              padding: {\n                  top: 5,\n                  left: 15,\n                  right: 15,\n                  bottom: 15\n              }\n          }\n          }}\n        />\n      </div>\n    )\n  }\n}\n\nexport default Chart;\n","import React, {Component} from 'react';\nimport logo from './logo512.png';\n\nclass MenuBar extends Component{\n    render(){\n        return(\n            <div className=\"App-header\">\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                <h3 className=\"mainTitle\">How2uSleep</h3>\n            </div>\n        );\n    }\n}\n\nexport default MenuBar\n","import React from \"react\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport \"./Form.css\";\n\nconst Form = () => (\n  <div className=\"app\">\n    <h1> Relatório</h1>\n\n    <Formik\n      initialValues={{ email: \"\"}}\n      onSubmit={async values => {\n        await new Promise(resolve => setTimeout(resolve, 500));\n        alert(JSON.stringify(values, null, 2));\n      }}\n      validationSchema={Yup.object().shape({\n        email: Yup.string()\n          .email()\n          .required(\"Required\")\n      })}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset\n        } = props;\n\n        return (\n          <form onSubmit={handleSubmit}>\n\n            <label htmlFor=\"name\">Nome Completo</label>\n            <input\n              name=\"name\"\n              type=\"string\"\n              placeholder=\"Nome Completo\"\n              value={values.name}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              className={errors.name && touched.name && \"error\"}\n            />\n\n        <label htmlFor=\"email\" style={{ display: \"block\"}}>Email</label>\n            <input\n              id=\"email\"\n              placeholder=\"Email\"\n              type=\"text\"\n              value={values.email}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              className={\n                errors.email && touched.email\n                  ? \"text-input error\"\n                  : \"text-input\"\n              }\n            />\n            {errors.email && touched.email && (\n              <div className=\"input-feedback\">{errors.email}</div>\n            )}\n\n            <button className=\"SubmitButton\" type=\"submit\" disabled={isSubmitting}>\n              Enviar\n            </button>\n          </form>\n        );\n      }}\n    </Formik>\n  </div>\n);\n\nexport default Form;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Chart from './Charts/Chart';\nimport MenuBar from './Menu/MenuBar';\nimport Form from './Form/Form';\nimport * as jsPDF from \"jspdf\";\nimport domtoimage from 'dom-to-image';\n\nvar Tempo = [1,2,3,4,5,6,7,8,9,10,11];\nvar BatimentosCardiacos = [1,20,3,50,100,50,7,80,10,40,120];\nvar EsforcoRespiratorio = [1,20,3,50,100,50,7,80,10,40,120];\nvar SaturacaoOxigenio = [1,20,3,50,100,50,7,80,10,40,120];\nvar FluxoNasal = [1,20,3,50,100,50,7,80,10,40,120];\nvar Ruido = [1,20,3,50,100,50,7,80,10,40,120];\n\nconst divStyle = {\n    width:1000,\n    height: 400,\n    margin: \"auto\"\n};\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      chartData1:{},    // Batimentos Cardiacos\n      chartData2:{},    // Esforco Respiratorio\n      chartData3:{},    // Saturacao de Oxigenio\n      chartData4:{},    // Fluxo Nasal\n      chartData5:{},     // Ronco\n      mydata: []\n    }\n  }\n\n  componentWillMount(){\n    this.getChartData();\n  }\n\n  // componentDidMount(){\n  //     // this.interval = setInterval(this.fetchNews, 1000); chamar dados da API a cada 1 seg\n  //     axios.get('https://jsonplaceholder.typicode.com/users').then(result => {\n  //       console.log(result)\n  //         this.setState({ mydata: result.data});\n  //     });\n  // }\n\n  getChartData(){\n    // Ajax calls here\n    this.setState({\n      chartData1:{\n        labels: Tempo,\n        datasets:[\n          {\n            label:'Batimentos Cardíacos',\n            data: BatimentosCardiacos,\n            fill: true,\n            borderColor: \"#ac0000\",\n            backgroundColor:[\n              'rgba(172, 0, 0,0.2)'\n            ]\n          }\n        ]\n      },\n      chartData2:{\n        labels: Tempo,\n        datasets:[\n          {\n            label:'Esforço Respiratório',\n            data: EsforcoRespiratorio,\n            fill: true,\n            borderColor: \"#ac0000\",\n            backgroundColor:[\n              'rgba(172, 0, 0,0.2)'\n            ]\n          }\n        ]\n      },\n      chartData3:{\n        labels: Tempo,\n        datasets:[\n          {\n            label:'Saturação de Oxigênio',\n            data: SaturacaoOxigenio,\n            fill: true,\n            borderColor: \"#ac0000\",\n            backgroundColor:[\n              'rgba(172, 0, 0,0.2)'\n            ]\n          }\n        ]\n      },\n      chartData4:{\n        labels: Tempo,\n        datasets:[\n          {\n            label:'Fluxo Nasal',\n            data: FluxoNasal,\n            fill: true,\n            borderColor: \"#ac0000\",\n            backgroundColor:[\n              'rgba(172, 0, 0,0.2)'\n            ]\n          }\n        ]\n      },\n      chartData5:{\n        labels: Tempo,\n        datasets:[\n          {\n            label:'Ruído',\n            data: Ruido,\n            fill: true,\n            borderColor: \"#ac0000\",\n            backgroundColor:[\n              'rgba(172, 0, 0,0.2)'\n            ]\n          }\n        ]\n      },\n  }); //fim do setState()\n  }\n\n  demoFromHTML(){\n     // Propriedades\n    var doc = new jsPDF(\"l\", \"pt\");\n    const options = { background: 'white', height: 500, width: 1500 };\n    var img = new Image();\n    doc.setProperties({\n    \ttitle: 'Relatório do Sono',\n    \tsubject: 'Relatório do Sono',\n    \tauthor: 'How2uSleep',\n    \tkeywords: 'apneia,hipopneia,sono'\n    })\n    doc.setTextColor(\"#ac0000\");\n\n    // Título\n    doc.setFontSize(32);\n    doc.text(20, 30, 'Relatório do Sono');\n    doc.setDrawColor(\"#ac0000\");\n    doc.setLineWidth(1.5);\n    doc.line(20, 35, 700, 35);\n    doc.addPage();\n    doc.setFontSize(16);\n\n    // Batimentos Cardíacos\n    doc.text(20, 20, 'Batimentos Cardíacos');\n    var node = document.getElementsByClassName('divPrint')[0];\n    domtoimage.toPng(node,options)\n    .then(function (dataUrl) {\n        img.src = dataUrl;\n        doc.addImage(img, \"JPEG\", 0, 150, 700, 400);\n        doc.addPage();\n        // Esforco Respiratorio\n        doc.text(20, 20, 'Esforço Respiratório');\n        var node = document.getElementsByClassName('divPrint1')[0];\n        domtoimage.toPng(node,options)\n        .then(function (dataUrl) {\n            img.src = dataUrl;\n            doc.addImage(img, \"JPEG\", 0, 150, 700, 400);\n            doc.addPage();\n            // Saturação de Oxigênio\n            doc.text(20, 20, 'Saturação de Oxigênio');\n            var node = document.getElementsByClassName('divPrint2')[0];\n            domtoimage.toPng(node,options)\n            .then(function (dataUrl) {\n                img.src = dataUrl;\n                doc.addImage(img, \"JPEG\", 0, 150, 700, 400);\n                doc.addPage();\n                // Fluxo Nasal\n                doc.text(20, 20, 'Fluxo Nasal');\n                var node = document.getElementsByClassName('divPrint3')[0];\n                domtoimage.toPng(node,options)\n                .then(function (dataUrl) {\n                    img.src = dataUrl;\n                    doc.addImage(img, \"JPEG\", 0, 150, 700, 400);\n                    doc.addPage();\n                    // Ruido\n                    doc.text(20, 20, 'Ruído');\n                    var node = document.getElementsByClassName('divPrint4')[0];\n                    domtoimage.toPng(node,options)\n                    .then(function (dataUrl) {\n                        img.src = dataUrl;\n                        doc.addImage(img, \"JPEG\", 0, 150, 700, 400);\n                        doc.output('dataurlnewwindow');\n                        // doc.save(\"Relatorio.pdf\");\n                    })\n                })\n            })\n        })\n    })\n}\n\n\n  render() {\n    return (\n      <div  className=\"App\">\n        <MenuBar />\n        <hr style={{color:\"#ac0000\"}}></hr>\n\n        <div id=\"pdf\" className=\"divPrint\" style={divStyle} >\n          <Chart chartData={this.state.chartData1} title=\"Batimentos Cardíacos\"  />\n        </div>\n\n        <div className=\"divPrint1\" style={divStyle}>\n          <Chart chartData={this.state.chartData2} title=\"Esforço Respiratório\"   />\n        </div>\n\n        <div className=\"divPrint2\" style={divStyle}>\n          <Chart chartData={this.state.chartData3} title=\"Saturação de Oxigênio\" />\n        </div>\n\n        <div className=\"divPrint3\" style={divStyle}>\n          <Chart chartData={this.state.chartData4} title=\"Fluxo Nasal\"  />\n        </div>\n\n        <div className=\"divPrint4\" style={divStyle}>\n            <Chart chartData={this.state.chartData5} title=\"Ruído\"  />\n        </div>\n\n        <div className=\"divPrint5\" style={divStyle}>\n          <Form />\n        </div>\n\n        <div id=\"BotaoRelatorio\">\n            <button className=\"pdfButton\" onClick={() => console.log(\"ici\") || this.demoFromHTML()}>\n                Relatório\n              </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n// <div style={divStyle}>\n//     <h5>AJAX Example</h5>\n//     <ul>\n//         {this.state.mydata.map(person => <li key={person.id}>{person.name}</li>)}\n//     </ul>\n// </div>\n\n// const pdfConverter = require(\"jspdf\");\n// let input = window.document.getElementsByClassName(\"divPrint\")[0];\n// html2canvas(input)\n//   .then(canvas => {\n//     console.log(canvas);\n//     const imgData = canvas.toDataURL(\"image/png\");\n//     const pdf = new pdfConverter(\"l\", \"pt\");\n//     pdf.addImage(imgData, \"JPEG\", 50, 50, 300, 150); // eixo x e y, largura e altura\n//     // pdf.save(\"BatimentosCardiacos.pdf\");\n//     pdf.output('dataurlnewwindow');\n//   })\n//   .catch(err => console.log(err.message));\n\n// var image = canvas.toDataURL(\"image/png\").replace(\"image/png\", \"image/octet-stream\");\n//   window.location.href=image;\n\n// https://mrrio.github.io/\n// https://www.npmjs.com/package/jspdf\n// https://github.com/MrRio/jsPDF\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}