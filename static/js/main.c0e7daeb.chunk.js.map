{"version":3,"sources":["Charts/Chart.js","Menu/MenuBar.js","App.js","Sobre/Sobre.js","serviceWorker.js","index.js","Menu/logo512.png"],"names":["Chart","props","state","chartData","className","data","this","height","width","options","responsive","maintainAspectRatio","title","display","displayTitle","text","fontSize","fontColor","legend","displayLegend","position","legendPosition","layout","padding","top","left","right","bottom","Component","defaultProps","MenuBar","doc","jsPDF","background","img","Image","setProperties","subject","author","keywords","setTextColor","setFontSize","setDrawColor","setLineWidth","line","addPage","node","document","getElementsByClassName","domtoimage","toPng","then","dataUrl","src","addImage","save","to","logo","alt","onClick","console","log","demoFromHTML","Tempo","BatimentosCardiacos","EsforcoRespiratorio","SaturacaoOxigenio","FluxoNasal","Ruido","divStyle","margin","App","chartData1","chartData2","chartData3","chartData4","chartData5","mydata","getChartData","setState","labels","datasets","label","fill","borderColor","backgroundColor","id","style","Sobre","Boolean","window","location","hostname","match","ReactDOM","render","basename","pathname","path","exact","component","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.c0e7daeb.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {Line} from 'react-chartjs-2';\r\n\r\nclass Chart extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      chartData: props.chartData\r\n    }\r\n  }\r\n\r\n  // 'defaultProps define uma propriedade padrao\r\n  // caso nao seja especificado nenhuma quando passado\r\n  // e será sobreescrito caso algum seja passado\r\n  static defaultProps = {\r\n    displayTitle:true,\r\n    displayLegend: true,\r\n    legendPosition:'bottom'\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"chart\">\r\n        <Line\r\n          data={this.state.chartData}\r\n          height={400}\r\n          width={10}\r\n          options={{\r\n            responsive: true,\r\n            maintainAspectRatio: false,\r\n            title:{\r\n              display:this.props.displayTitle,\r\n              text: this.props.title,\r\n              fontSize:20,\r\n              fontColor: \"#ac0000\"\r\n            },\r\n            legend:{\r\n              display:this.props.displayLegend,\r\n              position:this.props.legendPosition\r\n            },\r\n            layout: {\r\n              padding: {\r\n                  top: 5,\r\n                  left: 15,\r\n                  right: 15,\r\n                  bottom: 15\r\n              }\r\n          }\r\n          }}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Chart;\r\n","import React, {Component} from 'react';\r\nimport logo from './logo512.png';\r\nimport * as jsPDF from \"jspdf\";\r\nimport domtoimage from 'dom-to-image';\r\nimport './Menu.css';\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass MenuBar extends Component{\r\n\r\n    demoFromHTML(){\r\n       // Propriedades\r\n      var doc = new jsPDF(\"l\", \"pt\");\r\n      const options = { background: 'white', height: 500, width: 1500 };\r\n      var img = new Image();\r\n      doc.setProperties({\r\n          title: 'Relatório do Sono',\r\n          subject: 'Relatório do Sono',\r\n          author: 'How2uSleep',\r\n          keywords: 'apneia,hipopneia,sono'\r\n      })\r\n      doc.setTextColor(\"#ac0000\");\r\n\r\n      // Título\r\n      doc.setFontSize(32);\r\n      doc.text(20, 30, 'Relatório do Sono');\r\n      doc.setDrawColor(\"#ac0000\");\r\n      doc.setLineWidth(1.5);\r\n      doc.line(20, 35, 700, 35);\r\n      doc.addPage();\r\n      doc.setFontSize(16);\r\n\r\n      // Batimentos Cardíacos\r\n      doc.text(20, 20, 'Batimentos Cardíacos');\r\n      var node = document.getElementsByClassName('divPrint')[0];\r\n      domtoimage.toPng(node,options)\r\n      .then(function (dataUrl) {\r\n          img.src = dataUrl;\r\n          doc.addImage(img, \"JPEG\", 0, 150, 700, 400);\r\n          doc.addPage();\r\n          // Esforco Respiratorio\r\n          doc.text(20, 20, 'Esforço Respiratório');\r\n          var node = document.getElementsByClassName('divPrint1')[0];\r\n          domtoimage.toPng(node,options)\r\n          .then(function (dataUrl) {\r\n              img.src = dataUrl;\r\n              doc.addImage(img, \"JPEG\", 0, 150, 700, 400);\r\n              doc.addPage();\r\n              // Saturação de Oxigênio\r\n              doc.text(20, 20, 'Saturação de Oxigênio');\r\n              var node = document.getElementsByClassName('divPrint2')[0];\r\n              domtoimage.toPng(node,options)\r\n              .then(function (dataUrl) {\r\n                  img.src = dataUrl;\r\n                  doc.addImage(img, \"JPEG\", 0, 150, 700, 400);\r\n                  doc.addPage();\r\n                  // Fluxo Nasal\r\n                  doc.text(20, 20, 'Fluxo Nasal');\r\n                  var node = document.getElementsByClassName('divPrint3')[0];\r\n                  domtoimage.toPng(node,options)\r\n                  .then(function (dataUrl) {\r\n                      img.src = dataUrl;\r\n                      doc.addImage(img, \"JPEG\", 0, 150, 700, 400);\r\n                      doc.addPage();\r\n                      // Ruido\r\n                      doc.text(20, 20, 'Ruído');\r\n                      var node = document.getElementsByClassName('divPrint4')[0];\r\n                      domtoimage.toPng(node,options)\r\n                      .then(function (dataUrl) {\r\n                          img.src = dataUrl;\r\n                          doc.addImage(img, \"JPEG\", 0, 150, 700, 400);\r\n                          // doc.output('dataurlnewwindow');\r\n                          doc.save(\"Relatorio.pdf\");\r\n                      })\r\n                  })\r\n              })\r\n          })\r\n      })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"App-header\">\r\n                <ul className=\"menuBar\">\r\n                    <Link to=\"/\">\r\n                        <li className=\"itemLeft\">\r\n                            <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n                        </li>\r\n                    </Link>\r\n                    \r\n                    <li className=\"itemLeft\">\r\n                        <h3 className=\"mainTitle\">How2uSleep</h3>\r\n                    </li>\r\n                    \r\n                    <li className=\"itemRight\">\r\n                        <Link to=\"/Sobre\">\r\n                            <button>Sobre</button>\r\n                        </Link>\r\n                    </li>\r\n                    \r\n                    <li className=\"itemRight\">\r\n                        <button className=\"Sobre\" onClick={() => console.log(\"Relatorio\") || this.demoFromHTML()}>\r\n                            Relatório\r\n                        </button>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MenuBar\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Chart from './Charts/Chart';\r\nimport MenuBar from './Menu/MenuBar';\r\n\r\nvar Tempo = [1,2,3,4,5,6,7,8,9,10,11];\r\nvar BatimentosCardiacos = [1,20,3,50,100,50,7,80,10,40,120];\r\nvar EsforcoRespiratorio = [1,20,3,50,100,50,7,80,10,40,120];\r\nvar SaturacaoOxigenio = [1,20,3,50,100,50,7,80,10,40,120];\r\nvar FluxoNasal = [1,20,3,50,100,50,7,80,10,40,120];\r\nvar Ruido = [1,20,3,50,100,50,7,80,10,40,120];\r\n\r\nconst divStyle = {\r\n    width: \"90vh\",\r\n    height: \"40vh\",\r\n    margin: \"auto\"\r\n};\r\n\r\nclass App extends Component {\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      chartData1:{},    // Batimentos Cardiacos\r\n      chartData2:{},    // Esforco Respiratorio\r\n      chartData3:{},    // Saturacao de Oxigenio\r\n      chartData4:{},    // Fluxo Nasal\r\n      chartData5:{},     // Ronco\r\n      mydata: []\r\n    }\r\n  }\r\n\r\n  componentWillMount(){\r\n    this.getChartData();\r\n  }\r\n\r\n  getChartData(){\r\n    // Ajax calls here\r\n    this.setState({\r\n      chartData1:{\r\n        labels: Tempo,\r\n        datasets:[\r\n          {\r\n            label:'Batimentos Cardíacos',\r\n            data: BatimentosCardiacos,\r\n            fill: true,\r\n            borderColor: \"#ac0000\",\r\n            backgroundColor:[\r\n              'rgba(172, 0, 0,0.2)'\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      chartData2:{\r\n        labels: Tempo,\r\n        datasets:[\r\n          {\r\n            label:'Esforço Respiratório',\r\n            data: EsforcoRespiratorio,\r\n            fill: true,\r\n            borderColor: \"#ac0000\",\r\n            backgroundColor:[\r\n              'rgba(172, 0, 0,0.2)'\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      chartData3:{\r\n        labels: Tempo,\r\n        datasets:[\r\n          {\r\n            label:'Saturação de Oxigênio',\r\n            data: SaturacaoOxigenio,\r\n            fill: true,\r\n            borderColor: \"#ac0000\",\r\n            backgroundColor:[\r\n              'rgba(172, 0, 0,0.2)'\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      chartData4:{\r\n        labels: Tempo,\r\n        datasets:[\r\n          {\r\n            label:'Fluxo Nasal',\r\n            data: FluxoNasal,\r\n            fill: true,\r\n            borderColor: \"#ac0000\",\r\n            backgroundColor:[\r\n              'rgba(172, 0, 0,0.2)'\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      chartData5:{\r\n        labels: Tempo,\r\n        datasets:[\r\n          {\r\n            label:'Ruído',\r\n            data: Ruido,\r\n            fill: true,\r\n            borderColor: \"#ac0000\",\r\n            backgroundColor:[\r\n              'rgba(172, 0, 0,0.2)'\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n  });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div  className=\"App\">\r\n        <MenuBar />\r\n     \r\n        <div id=\"pdf\" className=\"divPrint\" style={divStyle} >\r\n          <Chart chartData={this.state.chartData1} title=\"Batimentos Cardíacos\"  />\r\n        </div>\r\n             \r\n        <div className=\"divPrint1\" style={divStyle}>\r\n          <Chart chartData={this.state.chartData2} title=\"Esforço Respiratório\"   />\r\n        </div>\r\n        \r\n        <div className=\"divPrint2\" style={divStyle}>\r\n          <Chart chartData={this.state.chartData3} title=\"Saturação de Oxigênio\" />\r\n        </div>\r\n        \r\n        <div className=\"divPrint3\" style={divStyle}>\r\n          <Chart chartData={this.state.chartData4} title=\"Fluxo Nasal\"  />\r\n        </div>\r\n         \r\n        <div className=\"divPrint4\" style={divStyle}>\r\n            <Chart chartData={this.state.chartData5} title=\"Ruído\"  />\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n  // componentDidMount(){\r\n  //     // this.interval = setInterval(this.fetchNews, 1000); chamar dados da API a cada 1 seg\r\n  //     axios.get('https://jsonplaceholder.typicode.com/users').then(result => {\r\n  //       console.log(result)\r\n  //         this.setState({ mydata: result.data});\r\n  //     });\r\n  // }\r\n\r\n\r\n// import Form from './Form/Form';\r\n//   <div className=\"divPrint5\" style={divStyle}>\r\n//   <Form />\r\n// </div>","import React, { Component } from 'react';\r\nimport './Sobre.css'; \r\nimport { Link } from 'react-router-dom'\r\nimport logo from '../Menu/logo512.png';\r\n\r\nfunction MenuBar(){\r\n    return(\r\n            <div className=\"App-header\">\r\n                <ul className=\"menuBar\">\r\n                    <Link to=\"/\">\r\n                        <li className=\"itemLeft\">\r\n                            <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n                        </li>\r\n                    </Link>\r\n                    \r\n                    <li className=\"itemLeft\">\r\n                        <h3 className=\"mainTitle\">How2uSleep</h3>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n    );\r\n}\r\n\r\nclass Sobre extends Component{\r\n    render() {\r\n        return (\r\n        <div>    \r\n            <MenuBar />            \r\n            <div id=\"sobreDiv\">\r\n                <h1 id=\"sobreTitle\">Sobre</h1>\r\n                <p id=\"textoSobre\">\r\n                    Dormir mal parece ser um dos males da vida moderna. Só nos Estados Unidos,\r\n                    cerca de 70 milhões de pessoas sofrem com noites mal dormidas, sendo que 60% delas\r\n                    apresentam algum problema crônico. Com isso, a preocupação com a qualidade do sono\r\n                    vem ganhando destaque. Nesse sentido, a possibilidade de identificar a causa, em que\r\n                    fase da noite ocorre e poder associá-lo a outros fatores, pode ser de grande ajuda no\r\n                    tratamento do distúrbio do sono (insônia, apneia, privação crônica do sono,\r\n                    sonambulismo, bruxismo, síndrome dos movimentos periódicos dos membros). \r\n                </p>\r\n                <h3>Autores</h3>\r\n                <p>\r\n                    Anderson de Alencar <br />\r\n                    Uendel Couto\r\n                </p>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Sobre;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport Sobre from './Sobre/Sobre';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n    <BrowserRouter basename={window.location.pathname || ''}>\r\n        <Switch>\r\n            <Route path=\"/\" exact={true} component={App} />\r\n            <Route path=\"/Sobre\" component={Sobre} />\r\n        </Switch>\r\n    </ BrowserRouter> \r\n    , document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo512.df180eb6.png\";"],"sourceRoot":""}